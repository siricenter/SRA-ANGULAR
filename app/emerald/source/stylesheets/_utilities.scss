@import "compass/css3";

$fullscreen-zindex: 2000 !default;

.high {
  height: 100%;
}

.fullscreen {
  position: fixed !important;
  top: 0  !important;
  bottom: 0 !important;
  left: 0 !important;
  right: 0 !important;
  margin: 0 !important;
  width: 100% !important;
  height: 100% !important;
  z-index: $fullscreen-zindex !important;
}

.push-top {
  margin-top: $panel-body-padding;
}

.push-bottom {
  margin-bottom: $panel-body-padding;
}

.pull-top {
  margin-top: -$panel-body-padding;
}

.vpadded {
  padding-top: $panel-body-padding;
  padding-bottom: $panel-body-padding;
}

.vpadded-row {
  > * {
    padding-top: $panel-body-padding;
    padding-bottom: $panel-body-padding;
  }
}

.hpadded {
  padding-left: $panel-body-padding;
  padding-right: $panel-body-padding;
}

.padded {
  padding: $panel-body-padding;
}

.no-padding {
  padding: 0;
}

.margin {
  margin: $panel-body-padding;
}

.no-margin {
  margin: 0;
}

$positions: top bottom left right;
@each $position in $positions {
  .padded-#{$position} {
    padding-#{$position}: $panel-body-padding;
  }
  .margin-#{$position} {
    margin-#{$position}: $panel-body-padding;
  }
  .no-padding-#{$position} {
    padding-#{$position}: 0;
  }
  .no-margin-#{$position} {
    margin-#{$position}: 0;
  }
}

.no-padding-v {
  padding-top: 0;
  padding-bottom: 0;
}

.no-padding-h {
  padding-left: 0;
  padding-right: 0;
}

.no-border-radius {
  @include border-radius(0);
}

.vertical-text-left {
  position: absolute;
  left: 1.5em;
  @include transform(rotate(90deg));
  @include transform-origin(left, top, 0);
  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);
}

.vertical-text-right {
  position: absolute;
  right: 1.5em;
  @include transform(rotate(-90deg));
  @include transform-origin(right, top, 0);
  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);
  &.with-scroll {
    right: 2em;
  }
}

.circle {
  @include border-radius(50%);
}

.grayscale {
  filter: url("data:image/svg+xml;utf8,<svg xmlns=\\'http://www.w3.org/2000/svg\\'><filter id=\\'grayscale\\'><feColorMatrix type=\\'matrix\\' values=\\'0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\\'/></filter></svg>#grayscale"); /* Firefox 10+, Firefox on Android */
  filter: gray; /* IE6-9 */
  @include filter(grayscale(100%)); /* Chrome 19+, Safari 6+, Safari 6+ iOS */
}


//helpers for pulling content. useful when dealing with first or last col-* in a row, or want to pull up/down stuff

$screen-widths-max:
  xs $screen-xs-max,
  sm $screen-sm-max,
  md $screen-md-max;

@mixin pull-content($size-name, $space) {
  .pull-left-#{$size-name} {
    margin-left: - floor($space);
  }

  .pull-right-#{$size-name} {
    margin-right: - floor($space);
  }

  .pull-top-#{$size-name} {
    margin-top: - floor($space);
  }

  .pull-bottom-#{$size-name} {
    margin-bottom: - floor($space);
  }

  .push-left-#{$size-name} {
    margin-left: floor($space);
  }

  .push-right-#{$size-name} {
    margin-right: floor($space);
  }

  .push-top-#{$size-name} {
    margin-top: floor($space);
  }

  .push-bottom-#{$size-name} {
    margin-bottom: floor($space);
  }
}

@include pull-content(lg, $grid-gutter-width/2);

@each $pair in $screen-widths-max {
  @media (max-width: nth($pair, 2)) {
    @include pull-content(nth($pair, 1), $grid-gutter-width/2);
    .no-pull-#{nth($pair, 1)} {
      margin: 0;
    }
  }
}

// center a component between pull-left and pull-right
.pull-center {
  display: table;
  margin-left: auto;
  margin-right: auto;
  float: none;
}

.component-shadow {
  @include box-shadow($component-shadow);
}
.text-component-shadow {
  @include text-shadow($component-shadow);
}